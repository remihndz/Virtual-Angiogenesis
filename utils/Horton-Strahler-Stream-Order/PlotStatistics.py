'''
Compute the Horton-Strahler stream order of 
a tree generated by CCO from its .cco file.
'''

import sys
from pathlib import Path
from utils import *
from numpy import loadtxt

assert(len(sys.argv)>1)
outputImageFile = 'img/' + Path(sys.argv[1]).stem + '.png'

treesData = []
for ccoFile in sys.argv[1:]:
    print("Reading file", Path(ccoFile).stem + '.cco')
    data, connectivity = ReadTree(ccoFile)
    orderedData = StrahlerOrder(data, connectivity)
    treesData.extend(orderedData)

PlotTreeStatistics(treesData, outputImageFile=outputImageFile)

dataFile = 'img/' + Path(sys.argv[1]).stem + '.dat'
data = loadtxt(dataFile)

orders = data[0, :-1]
radius = data[1:3,:-1]
length = data[3:5,:-1]
volume = data[5:8,:-1]
aspect = data[8:10,:-1]
counts = data[-1,:-1]

PlotLineAndBars(orders, 2*radius, counts, labels=[r'Diameter ($\mu m$)', 'Number of vessels per stream order'], fontsize=14, logplot=False)
PlotLineAndBars(orders, length, counts, labels=[r'Length ($\mu m$)', 'Number of vessels per stream order'], fontsize=14, logplot=False)
# PlotLineAndBars(orders, volume, counts, labels=[r'volume ($\mu m^3$)', 'Number of vessels per stream order'], fontsize=14, logplot=False)
PlotLineAndBars(orders, aspect, counts, labels=[r'Aspect ratio', 'Number of vessels per stream order'], fontsize=14, logplot=False)







'''
A test tree, from Wikipedia's Strahler order webpage
treeData = [[0, 0.5, 1.0, 0.0],
            [1, 0.2, 1.0, 0.0],
            [2, 0.5, 1.0, 0.0],
            [3, 0.4, 1.0, 0.0],
            [4, 0.3, 1.0, 0.0],
            [5, 0.2, 1.0, 0.0],
            [6, 0.2, 1.0, 0.0],
            [7, 0.3, 1.0, 0.0],
            [8, 0.2, 1.0, 0.0],
            [9, 0.2, 1.0, 0.0],
            [10, 0.4, 1.0, 0.0],
            [11, 0.1, 1.0, 0.0],
            [12, 0.4, 1.0, 0.0],
            [13, 0.3, 1.0, 0.0],
            [14, 0.2, 1.0, 0.0],
            [15, 0.2, 1.0, 0.0],
            [16, 0.3, 1.0, 0.0],
            [17, 0.2, 1.0, 0.0],
            [18, 0.2, 1.0, 0.0]]

treeConnectivity = [[0, -1, [1,2]],
                    [1, 0, []],
                    [2, 0, [3,10]],
                    [3, 2, [4,7]],
                    [4, 3, [5,6]],
                    [5, 4, []],
                    [6, 4, []],
                    [7, 3, [9,8]],
                    [8, 7, []],
                    [9, 7, []],
                    [10, 2, [11,12]],
                    [11, 10, []],
                    [12, 10, [13, 16]],
                    [13, 12, [14, 15]],
                    [14, 13, []],
                    [15, 13, []],
                    [16, 12, [17, 18]],
                    [17, 16, []],
                    [18, 16, []]]
'''
